# handlers/startup.py
import logging
import asyncio
from aiogram import types
from aiogram.dispatcher import Dispatcher
from .users import add_user
from ..logger import get_logger

logger = get_logger("startup", "startup.log")


async def on_startup_common(dp: Dispatcher):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Ö –¥–ª—è polling"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        updates = await dp.bot.get_updates(limit=100, timeout=1)

        if updates:
            user_ids = set()
            for update in updates:
                if update.message:
                    user_ids.add(update.message.from_user.id)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            for user_id in user_ids:
                try:
                    await dp.bot.send_message(
                        user_id,
                        "üîß –ò–∑–≤–∏–Ω–∏—Ç–µ, –±–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω.\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å.",
                    )
                except Exception as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}: {e}")
                await asyncio.sleep(0.05)

            print(f"‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–æ {len(user_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ.")

            # ‚Äî‚Äî‚Äî –ö–õ–Æ–ß–ï–í–ê–Ø –°–¢–†–û–ö–ê ‚Äî‚Äî‚Äî
            # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ ‚Äî –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
            last_update_id = updates[-1].update_id
            await dp.bot.get_updates(offset=last_update_id + 1, limit=1, timeout=0)
            # –≠—Ç–æ "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç" –ø—Ä–∏—ë–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π ‚Äî Telegram –Ω–µ –ø—Ä–∏—à–ª—ë—Ç –∏—Ö —Å–Ω–æ–≤–∞

        else:
            print("‚úÖ –ù–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ on_startup: {e}")

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username

    print(f"User: ID={user_id}, Username=@{username}")

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª all_users.json
    added = add_user(user_id, username)
    if added:
        print(f"‚úÖ –ü—Ä–∏–≤–µ—Ç! –¢–≤–æ–π ID —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {user_id}")
    else:
        print(f"‚úÖ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –¢—ã —É–∂–µ –≤ –±–∞–∑–µ: {user_id}")
