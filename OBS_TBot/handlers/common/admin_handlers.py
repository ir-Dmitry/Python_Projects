import json
from aiogram import types
from ..file_reader import load_json

from ..logger import get_logger
from ..common.users import (
    is_admin,
    add_admin,
    remove_admin,
    load_all_users,
)

logger = get_logger("common", "common.log")


async def add_admin_by_nickname(message: types.Message):
    if not await admin_only(message):
        return
    try:
        # –†–∞–∑–±–∏—Ä–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        nickname = message.text.split()[1]  # @username
        print(f"–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞: /add_admin —Å –Ω–∏–∫–Ω–µ–π–º–æ–º @{nickname}")

        # –£–±–∏—Ä–∞–µ–º @, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if nickname.startswith("@"):
            nickname = nickname[1:]
        print(f"–ù–∏–∫–Ω–µ–π–º –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è @: {nickname}")

        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫–Ω–µ–π–º—É –≤ –±–∞–∑–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = load_all_users()
        print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã.")
        user_info = next((user for user in users if user["username"] == nickname), None)

        if user_info:
            user_id = user_info["id"]
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nickname} –Ω–∞–π–¥–µ–Ω —Å ID: {user_id}")
            # –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            added = add_admin(user_id)
            if added:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nickname} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω—ã.")
                await message.answer(f"‚úÖ –ê–¥–º–∏–Ω @{nickname} –¥–æ–±–∞–≤–ª–µ–Ω.")
            else:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nickname} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
                await message.answer(
                    f"‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
                )
        else:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            await message.answer(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–Ω–µ–π–º–æ–º @{nickname}."
            )

    except IndexError:
        print("–û—à–∏–±–∫–∞: –ù–∏–∫–Ω–µ–π–º –Ω–µ –±—ã–ª —É–∫–∞–∑–∞–Ω –≤ –∫–æ–º–∞–Ω–¥–µ.")
        await message.answer(
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /add_admin @username"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {str(e)}")
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {str(e)}"
        )  # handlers/common.py


async def remove_admin_by_nickname(message: types.Message):
    if not await admin_only(message):
        return  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

    try:
        # –†–∞–∑–±–∏—Ä–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        nickname = message.text.split()[1]  # @username
        print(f"–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞: /remove_admin —Å –Ω–∏–∫–Ω–µ–π–º–æ–º @{nickname}")

        # –£–±–∏—Ä–∞–µ–º @, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if nickname.startswith("@"):
            nickname = nickname[1:]
        print(f"–ù–∏–∫–Ω–µ–π–º –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è @: {nickname}")

        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫–Ω–µ–π–º—É –≤ –±–∞–∑–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = load_all_users()
        print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã.")
        user_info = next((user for user in users if user["username"] == nickname), None)

        if user_info:
            user_id = user_info["id"]
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nickname} –Ω–∞–π–¥–µ–Ω —Å ID: {user_id}")

            # –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            removed = remove_admin(user_id)
            if removed:
                await message.answer(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä @{nickname} —É–¥–∞–ª–µ–Ω.")
            else:
                await message.answer(
                    f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nickname} –Ω–µ –±—ã–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
                )
        else:
            await message.answer(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–Ω–µ–π–º–æ–º @{nickname}."
            )

    except IndexError:
        await message.answer(
            "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /remove_admin @username"
        )
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {str(e)}")


async def remove_all_registrations(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /remove_all_registrations –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""

    if not await admin_only(message):
        return
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = load_json("data/users.json", [])

        if not users:
            await message.reply("üì≠ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–∂–µ –ø—É—Å—Ç.")
            return

        # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users.clear()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
        with open("data/users.json", "w", encoding="utf-8") as f:
            json.dump(users, f, ensure_ascii=False, indent=2)

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        await message.reply(
            "‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω."
        )

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /remove_all_registrations: {e}")
        await message.reply(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–ø–∏—Å–∫–∞: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º
async def admin_only(message: types.Message):
    user_id = message.from_user.id
    if not is_admin(user_id):
        await message.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        return False
    return True
